plugins {
    id 'java'
    id 'org.springframework.boot' version '3.0.5'
    id 'io.spring.dependency-management' version '1.1.0'
    id 'org.graalvm.buildtools.native' version '0.9.20'
    id "com.palantir.docker" version "0.35.0"
    id "org.sonarqube" version "3.5.0.2730"
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

tasks.named('test') {
    useJUnitPlatform()
}

sonarqube {
    properties {
        property "sonar.projectKey", "cicd-demo"
        property "sonar.organization", "amaris"
        property "sonar.host.url", "https://sonarcloud.io"
    }
}

docker {
    if (project.hasProperty("imageName")) {
        name "${imageName}"
        dockerfile file("Dockerfile")
        files "build/libs/${bootJar.archiveFileName.get()}"
        buildArgs([
                JAR_FILE         : bootJar.archiveFileName.get(),
                PROJECT_PORT     : "8080",
                WORKING_DIRECTORY: "/usr/src/app",
        ])
    }
}